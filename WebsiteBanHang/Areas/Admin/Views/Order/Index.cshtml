@model IEnumerable<WebsiteBanHang.Models.Order>
@using WebsiteBanHang.Models
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    // Khai báo statuses một lần ở đây, ngoài vòng lặp
    var statuses = new[] { "Đang xử lý", "Đã xác nhận", "Đang giao", "Hoàn thành", "Đã hủy" };
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-cart-check me-2"></i>Quản lý đơn hàng</h2>
    <div>
        <button class="btn btn-info" onclick="loadOrderStats()">
            <i class="bi bi-graph-up me-2"></i>Thống kê
        </button>
    </div>
</div>

<!-- Stats Cards -->
<div class="row mb-4" id="statsCards" style="display: none;">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card card-admin bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-title mb-0">Tổng đơn hàng</h6>
                        <h2 class="mb-0" id="totalOrders">0</h2>
                    </div>
                    <i class="bi bi-cart-check" style="font-size: 2rem; opacity: 0.7;"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card card-admin bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-title mb-0">Doanh thu</h6>
                        <h2 class="mb-0" id="totalRevenue">0 VNĐ</h2>
                    </div>
                    <i class="bi bi-currency-dollar" style="font-size: 2rem; opacity: 0.7;"></i>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        function loadOrderStats() {
            $('#statsCards').toggle();

            $.get('@Url.Action("GetOrderStats", "Order")')
                .done(function(response) {
                    if (response.success) {
                        $('#totalOrders').text(response.totalOrders);
                        $('#totalRevenue').text(response.totalRevenue.toLocaleString() + ' VNĐ');
                    }
                });
        }

        function filterOrders(status) {
            const rows = $('#orderTable tbody tr');

            if (status === 'all') {
                rows.show();
            } else {
                rows.hide();
                rows.filter(`[data-status="${status}"]`).show();
            }
        }

        function updateOrderStatus(orderId, newStatus) {
            $.ajax({
                url: '@Url.Action("UpdateStatus", "Order")',
                type: 'POST',
                data: {
                    id: orderId,
                    status: newStatus
                },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showToast('Thành công!', 'Cập nhật trạng thái thành công', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast('Lỗi!', response.message, 'error');
                    }
                },
                error: function() {
                    showToast('Lỗi!', 'Không thể cập nhật trạng thái', 'error');
                }
            });
        }

        function showToast(title, message, type) {
            const toastClass = type === 'success' ? 'bg-success' : 'bg-danger';
            const icon = type === 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle';

            const toastHtml = `
                <div class="toast ${toastClass} text-white" role="alert">
                    <div class="toast-header ${toastClass} text-white border-0">
                        <i class="bi ${icon} me-2"></i>
                        <strong class="me-auto">${title}</strong>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">${message}</div>
                </div>
            `;

            if (!$('#toast-container').length) {
                $('body').append('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3"></div>');
            }

            const $toast = $(toastHtml);
            $('#toast-container').append($toast);

            const toast = new bootstrap.Toast($toast[0], { autohide: true, delay: 3000 });
            toast.show();

            $toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }
    </script>
}